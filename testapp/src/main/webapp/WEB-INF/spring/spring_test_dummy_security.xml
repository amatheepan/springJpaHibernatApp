<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security.xsd">
 
	<!-- HTTP basic authentication in Spring Security hasRole method will invoke when we declare
	use-expressions=true and auto-config=true is used to develop a a default login from by spring 
	container.-->
	
	<http auto-config="true" use-expressions="true">
		<intercept-url pattern="/**" access="hasRole(ROLE_USER)" />
		<intercept-url pattern="/test/m1" access="hasRole(ROLE_M1)"/>
		<intercept-url pattern="/test/m2" access="hasRole(ROLE_M2)"/>
		<http-basic />
	</http>
 
	<authentication-manager>
	   <authentication-provider>
	       <user-service>
		   <user name="ramu" password="gadde" authorities="hasRole(ROLE_USER)" />
	       </user-service>
	   </authentication-provider>
	   <!-- Customization of roles. -->
	   <authentication-provider user-service-ref="customRoles"/>
	</authentication-manager>

    <beans:bean id="customRoles" class="org.own.ste.admin.custom.roles.CustomRole"/>
</beans:beans>